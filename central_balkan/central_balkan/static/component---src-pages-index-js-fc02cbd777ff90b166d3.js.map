{"version":3,"sources":["webpack:///./src/components/layout.js","webpack:///./src/pages/index.js"],"names":["useStyles","makeStyles","theme","root","display","appBar","zIndex","drawer","height","toolbar","paddingTop","width","flexShrink","content","flexGrow","padding","spacing","Layout","_ref","categories","onCurrentCategoryChange","children","classes","console","log","react_default","a","createElement","className","CssBaseline","AppBar","position","Toolbar","Drawer","open","variant","List","map","category","ListItem","button","onClick","id","ListItemText","key","primary","name","products_count","IndexPage","state","products","currentCategory","_this","setState","componentDidMount","_this2","this","axios","get","then","res","data","render","_this3","currentProducts","foundCategories","filter","el","currentCategoryName","length","components_layout","product","React","Component"],"mappings":"qNAsBMA,UAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,QAAS,QAEXC,OAAQ,CACNC,OAAQJ,EAAMI,OAAOC,OAAS,EAC9BC,OAAQ,SAEVC,QAAS,CACPC,WAAY,QACZC,MAAO,SAETJ,OAAQ,CACNI,MAAO,QACPC,WAAY,GAEdC,QAAS,CACPC,SAAU,EACVC,QAASb,EAAMc,QAAQ,QA8CZC,EA1CA,SAAAC,GAAuD,IAApDC,EAAoDD,EAApDC,WAAYC,EAAwCF,EAAxCE,wBAAyBC,EAAeH,EAAfG,SAC/CC,EAAUtB,IAGhB,OAFAuB,QAAQC,IAAI,eAAgBL,GAG1BM,EAAAC,EAAAC,cAAA,OAAKC,UAAWN,EAAQnB,MACtBsB,EAAAC,EAAAC,cAACE,EAAA,EAAD,MACAJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAQC,SAAS,QAAQH,UAAWN,EAAQjB,QAC1CoB,EAAAC,EAAAC,cAACK,EAAA,EAAD,+BAEFP,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAQL,UAAWN,EAAQf,OAAQ2B,MAAM,EAAMC,QAAQ,aACrDV,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAWN,EAAQb,UAExBgB,EAAAC,EAAAC,cAACS,EAAA,EAAD,KACGjB,EAAWkB,IAAI,SAAAC,GAAQ,OACtBb,EAAAC,EAAAC,cAACY,EAAA,EAAD,CACEC,QAAM,EACNC,QAAS,kBAAMrB,EAAwBkB,EAASI,MAEhDjB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CACEC,IAAKN,EAASI,GACdG,QAAYP,EAASQ,KAAd,KAAuBR,EAASS,eAAhC,YAOnBtB,EAAAC,EAAAC,cAAA,QAAMC,UAAWN,EAAQT,SACvBY,EAAAC,EAAAC,cAAA,OAAKC,UAAWN,EAAQb,UACvBY,GAEHI,EAAAC,EAAAC,cAAA,iBCxEN,IAEMqB,8JACJC,MAAQ,CACN9B,WAAY,GACZ+B,SAAU,GACVC,gBAAiB,QAWnB/B,wBAA0B,SAAA+B,GAAe,OACvCC,EAAKC,SAAS,CAAEF,yIATlBG,kBAAA,WAAoB,IAAAC,EAAAC,KAClBC,IAAMC,IAVE,0CAUOC,KAAK,SAAAC,GAClBL,EAAKF,SAAS,CACZlC,WAAYyC,EAAIC,KAAK1C,WACrB+B,SAAUU,EAAIC,KAAKX,gBAOzBY,OAAA,WAAS,IAAAC,EAAAP,KACDQ,EAAkBR,KAAKP,MAAME,gBAC/BK,KAAKP,MAAMC,SAASM,KAAKP,MAAME,iBAC/B,GAEEc,EAAkBT,KAAKP,MAAM9B,WAAW+C,OAC5C,SAAAC,GAAE,OAAIA,EAAGzB,KAAOqB,EAAKd,MAAME,kBAEvBiB,EACJH,EAAgBI,OAAS,EACrBJ,EAAgB,GAAGnB,KACnB,yBAEN,OACErB,EAAAC,EAAAC,cAAC2C,EAAD,CACEnD,WAAYqC,KAAKP,MAAM9B,WACvBC,wBAAyBoC,KAAKpC,yBAE9BK,EAAAC,EAAAC,cAAA,UAAKyC,GACJJ,EAAgB3B,IAAI,SAAAkC,GAAO,OAC1B9C,EAAAC,EAAAC,cAAA,sBAAc4C,EAAQzB,aAtCR0B,IAAMC,WA6CfzB","file":"component---src-pages-index-js-fc02cbd777ff90b166d3.js","sourcesContent":["/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nimport \"./layout.css\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    height: \"100px\"\n  },\n  toolbar: {\n    paddingTop: \"100px\",\n    width: \"350px\"\n  },\n  drawer: {\n    width: \"350px\",\n    flexShrink: 0\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3)\n  }\n}));\n\nconst Layout = ({ categories, onCurrentCategoryChange, children }) => {\n  const classes = useStyles();\n  console.log(\"categories: \", categories);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>Централен Балкан ЕООД</Toolbar>\n      </AppBar>\n      <Drawer className={classes.drawer} open={true} variant=\"permanent\">\n        <div>\n          <div className={classes.toolbar} />\n\n          <List>\n            {categories.map(category => (\n              <ListItem\n                button\n                onClick={() => onCurrentCategoryChange(category.id)}\n              >\n                <ListItemText\n                  key={category.id}\n                  primary={`${category.name} (${category.products_count})`}\n                />\n              </ListItem>\n            ))}\n          </List>\n        </div>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        {children}\n      </main>\n      <footer></footer>\n    </div>\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default Layout;\n","import React from \"react\";\nimport axios from \"axios\";\n\nimport Layout from \"../components/layout\";\n\nconst url = \"http://centralbalkan.com/api/products/\";\n\nclass IndexPage extends React.Component {\n  state = {\n    categories: [],\n    products: {},\n    currentCategory: null\n  };\n\n  componentDidMount() {\n    axios.get(url).then(res => {\n      this.setState({\n        categories: res.data.categories,\n        products: res.data.products\n      });\n    });\n  }\n  onCurrentCategoryChange = currentCategory =>\n    this.setState({ currentCategory });\n\n  render() {\n    const currentProducts = this.state.currentCategory\n      ? this.state.products[this.state.currentCategory]\n      : [];\n\n    const foundCategories = this.state.categories.filter(\n      el => el.id === this.state.currentCategory\n    );\n    const currentCategoryName =\n      foundCategories.length > 0\n        ? foundCategories[0].name\n        : \"Няма избрана категория\";\n\n    return (\n      <Layout\n        categories={this.state.categories}\n        onCurrentCategoryChange={this.onCurrentCategoryChange}\n      >\n        <h1>{currentCategoryName}</h1>\n        {currentProducts.map(product => (\n          <div>Продукт {product.name}</div>\n        ))}\n      </Layout>\n    );\n  }\n}\n\nexport default IndexPage;\n"],"sourceRoot":""}